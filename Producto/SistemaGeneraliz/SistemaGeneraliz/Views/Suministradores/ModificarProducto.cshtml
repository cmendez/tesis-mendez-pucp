@model SistemaGeneraliz.Models.ViewModels.ProductosViewModel

@{
    //Layout = null;
    ViewBag.Title = "Modificar Producto";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Modificar Producto</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.8.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @{Html.RenderPartial("Titulo", new SistemaGeneraliz.Models.Helpers.PageTitle("Modificar Producto", "Por favor complete los siguientes campos."));}
    @using (Html.BeginForm("ModificarProducto", "Suministradores", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
    
        <div style="width: auto;">
            <div class="row-fluid">
                <!-- contenedor superior izquierdo: campos -->

                <div class="span7">
                    @Html.HiddenFor(model => model.ProductoId)
                    @Html.HiddenFor(model => model.SuministradorId)
                    @*<input type="hidden" id="SuministradorId" name="SuministradorId" value="@ViewBag.SuministradorId"/>*@
                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.NombreCorto)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.TextBoxFor(model => model.NombreCorto, new { maxlength = "19" })<br />
                                @Html.ValidationMessageFor(model => model.NombreCorto)
                            </div>
                        </div>
                    </div>

                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.NombreCompleto)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.TextAreaFor(model => model.NombreCompleto)<br />
                                @Html.ValidationMessageFor(model => model.NombreCompleto)
                            </div>
                        </div>
                    </div>

                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Descripcion)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.TextAreaFor(model => model.Descripcion)<br />
                                @Html.ValidationMessageFor(model => model.Descripcion)
                            </div>
                        </div>
                    </div>

                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.CategoriaProductoId)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.DropDownList("CategoriaProductoId", ViewBag.Categorias as SelectList, new { style = "width: 218px" })
                            </div>
                        </div>
                    </div>

                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.PrecioProducto)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.TextBoxFor(model => model.PrecioProducto)<br />
                                @Html.ValidationMessageFor(model => model.PrecioProducto)
                            </div>
                        </div>
                    </div>

                    <br />
                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Imagen)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.HiddenFor(model => model.ImagenId)
                                <img id="imagen" src="@Url.Action("GetImagen", "Suministradores", new { imagenId = Model.ImagenId })" alt="" width="160" >
                                @Html.TextBoxFor(m => m.File, new { type = "file" })
                                @Html.ValidationMessageFor(m => m.File)
                            </div>
                        </div>
                    </div>

                    <br />
                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.IsVisible)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.RadioButtonFor(model => model.IsVisible, 1, Model.IsVisible == 1 ? new { Checked = "checked" } : null) Sí &nbsp;
                                @Html.RadioButtonFor(model => model.IsVisible, 0, Model.IsVisible == 0 ? new { Checked = "checked" } : null) No
                            </div>
                        </div>
                    </div>

                    <div class="row-fluid">
                        <div class="span5">
                            <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.IsEliminado)</div>
                        </div>
                        <div class="span7">
                            <div class="editor-field" style="width: 100%; text-align: left;">
                                @Html.RadioButtonFor(model => model.IsEliminado, 1, Model.IsEliminado == 1 ? new { Checked = "checked" } : null) Sí &nbsp;
                                @Html.RadioButtonFor(model => model.IsEliminado, 0, Model.IsEliminado == 0 ? new { Checked = "checked" } : null) No
                            </div>
                        </div>
                    </div>

                    <br />
                    <button id="btnGuardar" type="submit" class="btn green pull-right" style="margin-right: 22%;">
                        Guardar <i class="icon-ok-sign  m-icon-white"></i>
                    </button>

                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Regresar", "EditarProductos", "Suministradores")
    </div>
</body>
</html>
